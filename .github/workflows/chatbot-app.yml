name: Chatbot App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: chatbot-app-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (skips if no tests/)
        if: ${{ hashFiles('tests/**') != '' }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          API_MONGO: ${{ secrets.API_MONGO }}
          EMAIL_ADMIN: ${{ secrets.EMAIL_ADMIN }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        run: |
          pytest -q

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub (if secrets provided)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build (and push on main)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.ref == 'refs/heads/main' && secrets.DOCKER_USERNAME != '' && secrets.DOCKER_PASSWORD != '' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/chatbot-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger Render deploy (if hook provided)
        run: |
          curl -fsSL -X POST "$RENDER_DEPLOY_HOOK"
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
